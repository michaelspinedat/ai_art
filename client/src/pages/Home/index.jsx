import React, { useEffect, useMemo, useState } from 'react'
import { Loader, Card, FormField } from '../../components'

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) return data.map(post => <Card key={post._id} {...post} />)
  return (
    <h2 className='mt-5 font-bold text-[#6449ff] text-xl uppercase'>{title}</h2>
  )
}

const Home = () => {
  const [isLoading, setIsLoading] = useState(false)
  const [posts, setPosts] = useState(null)
  const [searchText, setSearchText] = useState('')

  useEffect(() => {
    const fetchPosts = async () => {
      setIsLoading(true)
      try {
        const res = await fetch('http://localhost:8080/api/v1/posts')

        if (res.ok) {
          const result = await res.json()
          setPosts(result.data.reverse())
        }
      } catch (error) {
        alert(error)
      } finally {
        setIsLoading(false)
      }
    }

    fetchPosts()
  }, [])

  const filteredPosts = useMemo(() => {
    const search = searchText.toLowerCase()
    if (!search) return posts

    const filter = post => post.name.toLowerCase().includes(search) || post.prompt.toLowerCase().includes(search)
    return posts.filter(filter)
  }, [searchText, posts])

  const handleSearchChange = e => {
    setSearchText(e.target.value)
  }

  return (
    <section className='max-w-7xl mx-auto'>
      <div>
        <h1 className='font-extrabold text-[#222328] text-[32px]'>The community Showcase</h1>
        <p className='mt-2 text-[#666e75] text-[16px] max-w-[500px]'>Browse through a collection of imaginative and visually stunning images generated by DALL-E AI</p>
      </div>

      <div className='mt-16'>
        <FormField
          labelName='Search posts'
          type='text'
          name='text'
          placeholder='Search posts'
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className='mt-10'>
        {
          isLoading
            ? (<div className='flex justify-center items-center'><Loader /></div>)
            : (
              <>
                {
                  searchText &&
                  (<h2 className='font-medium text-[#666e75] text-xl mb-3'>
                    Showing results for <span className='text-[#222328]'>{searchText}</span>
                  </h2>)
                }
                <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
                  {
                    searchText
                      ? <RenderCards data={filteredPosts} title='No search found' />
                      : <RenderCards data={posts} title='No posts found' />
                  }
                </div>
              </>
              )
        }
      </div>
    </section>
  )
}

export default Home
